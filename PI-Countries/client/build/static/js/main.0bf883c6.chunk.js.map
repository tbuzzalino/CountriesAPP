{"version":3,"sources":["images/landing.jpg","components/LandingPage/styled.js","components/LandingPage/Landing.jsx","components/Nav/styled.js","redux/actions/actions.js","components/Search/styled.js","components/Search/Search.jsx","components/Nav/Nav.jsx","components/Card/Card.jsx","components/Home/styled.js","components/Pagination/Pagination.jsx","components/Home/Home.jsx","components/CountriesDetails/styled.js","components/CountriesDetails/CountriesDetails.jsx","components/FormActivities/styled.js","components/FormActivities/Form.jsx","App.js","reportWebVitals.js","redux/reducer/index.js","redux/store/index.js","index.js"],"names":["StyledDiv","styled","div","landing","Landing","history","useHistory","className","onClick","push","NavBar","nav","getAllCountries","dispatch","a","axios","get","response","type","payload","data","console","log","getCountriesByName","name","Search","useDispatch","useState","input","setInput","useEffect","onSubmit","e","preventDefault","handleSubmit","placeholder","value","onChange","target","handleChange","Nav","countries","useSelector","state","activities","handleClickOriginal","handleClick","array","sort","b","handleClickZ","handleClickPopulation","population","handleClickPopulationLower","handleRegion","reg","handleActivities","activity","map","el","index","Card","country","id","src","flag","alt","region","Pagination","cardsPerPage","paginate","pageNumbers","i","Math","ceil","length","number","href","Home","regionc","typeR","currentPage","setCurrentPage","indexOfLastCard","indexOfFirstCard","currentCountries","slice","currentRegions","pageNumber","CountriesDetails","idCountry","useParams","countriesId","capital","subregion","area","Activities","c","difficulty","duration","season","Form","countriesInput","countriesChange","setCountriesChange","errors","setErrors","handleSumbit","alert","post","handleInputChange","objError","validate","min","max","selected","disabled","handleCountriesChange","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reset","activitiesByCountry","filterByActivity","filter","action","newCountry","filtered","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bf883c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/landing.40036f2e.jpg\";","import styled from \"styled-components\";\r\nimport landing from \"../../images/landing.jpg\";\r\n\r\nexport const StyledDiv = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    background-image: url(${landing});\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n    .tittle {\r\n        display: flex;\r\n        justify-content: center;\r\n        color: white;\r\n    }\r\n    .container {\r\n        background-position: center;\r\n        background-size: cover;\r\n        background-attachment: fixed;\r\n        position: fixed;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .btn {\r\n        display: flex;\r\n        padding: 12px;\r\n        margin: auto;\r\n        font-size: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StyledDiv } from \"./styled\";\r\n\r\nconst Landing = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <StyledDiv className=\"container\">\r\n            <div>\r\n                <h1 className=\"tittle\">Welcome to the Countries App</h1>\r\n                <button onClick={() => history.push(`/home`)} className=\"btn\">\r\n                    Start your journey!\r\n                </button>\r\n            </div>\r\n        </StyledDiv>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavBar = styled.nav`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /* flex-wrap: wrap; */\r\n    background: #1b2a41;\r\n    padding-bottom: 20px;\r\n    margin-bottom: 25px;\r\n    color: white;\r\n\r\n    .Menu {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        position: relative;\r\n        margin: 15px;\r\n        font-size: 30px;\r\n        font-weight: bold;\r\n        span {\r\n            font-weight: 300;\r\n            font-size: 1.3 rem;\r\n            text-align: center;\r\n        }\r\n    }\r\n    .sort {\r\n        padding: 5px;\r\n        margin-right: 10px;\r\n        width: 6%;\r\n    }\r\n    .region {\r\n        padding: 5px;\r\n        margin-right: 10px;\r\n    }\r\n    .activity {\r\n        padding: 5px;\r\n        margin-right: 10px;\r\n    }\r\n    .activities {\r\n        padding: 5px;\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nexport const getAllCountries = () => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(\r\n            \"https://countries-a.herokuapp.com/countries\"\r\n        );\r\n        dispatch({ type: \"GET_COUNTRIES\", payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const getCountriesById = (id) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(\r\n            `https://countries-a.herokuapp.com/countries/${id}`\r\n        );\r\n        dispatch({ type: \"GET_COUNTRIES_ID\", payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const getCountriesByName = (name) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(\r\n            `https://countries-a.herokuapp.com/countries?name=${name}`\r\n        );\r\n        dispatch({ type: \"GET_COUNTRIES_NAME\", payload: response.data });\r\n        console.log(response.data);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const sort = (array) => async (dispatch) => {\r\n    dispatch({\r\n        type: \"SORT_ALPHABETICALLY\",\r\n        payload: array.sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }),\r\n    });\r\n};\r\n\r\nexport const sortZA = (array) => async (dispatch) => {\r\n    dispatch({\r\n        type: \"SORT_ALPHABETICALLY_ZA\",\r\n        payload: array.sort((a, b) => {\r\n            if (a.name < b.name) {\r\n                return 1;\r\n            }\r\n            if (a.name > b.name) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }),\r\n    });\r\n};\r\n\r\nexport const population = (array) => async (dispatch) => {\r\n    dispatch({\r\n        type: \"POPULATION\",\r\n        payload: array.sort((a, b) => {\r\n            if (a.population < b.population) {\r\n                return 1;\r\n            }\r\n            if (a.population > b.population) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }),\r\n    });\r\n};\r\n\r\nexport const populationLower = (array) => async (dispatch) => {\r\n    dispatch({\r\n        type: \"POPULATION_LOWER\",\r\n        payload: array.sort((a, b) => {\r\n            if (a.population > b.population) {\r\n                return 1;\r\n            }\r\n            if (a.population < b.population) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }),\r\n    });\r\n};\r\n\r\nexport const getRegions = (reg) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(\r\n            `https://countries-a.herokuapp.com/countries?region=${reg}`\r\n        );\r\n        dispatch({ type: \"GET_REGIONS\", payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const resetAll = () => (dispatch) => {\r\n    dispatch({ type: \"RESET\", payload: \"ALL\" });\r\n};\r\n\r\nexport const getActivities = () => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(\r\n            `https://countries-a.herokuapp.com/activities`\r\n        );\r\n        dispatch({ type: \"ACTIVITIES\", payload: response.data });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const filteredActivities = (activity) => async (dispatch) => {\r\n    dispatch({ type: \"ACTIVITIES_BY_COUNTRY\", payload: activity });\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDiv = styled.div`\r\n    .input {\r\n        margin: 10px;\r\n        border-radius: 4px;\r\n        width: 250px;\r\n        height: 20px;\r\n        padding: 5px;\r\n    }\r\n    .button {\r\n        padding: 5px;\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCountriesByName } from \"../../redux/actions/actions\";\r\nimport { StyledDiv } from \"./styled\";\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch();\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountriesByName(input));\r\n    }, [dispatch, input]);\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (input) {\r\n            dispatch(getCountriesByName(input));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search Country...\"\r\n                    value={input}\r\n                    name=\"input\"\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n            </form>\r\n        </StyledDiv>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect } from \"react\";\r\nimport { NavBar } from \"./styled\";\r\nimport Search from \"../Search/Search\";\r\nimport {\r\n    sort,\r\n    sortZA,\r\n    population,\r\n    populationLower,\r\n    getRegions,\r\n    getAllCountries,\r\n    resetAll,\r\n    getActivities,\r\n    filteredActivities,\r\n} from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const countries = useSelector((state) => state.countries);\r\n    const activities = useSelector((state) => state.activities);\r\n\r\n    const handleClickOriginal = (e) => dispatch(getAllCountries());\r\n\r\n    useEffect(() => {\r\n        dispatch(getActivities());\r\n    }, [dispatch]);\r\n\r\n    console.log(activities);\r\n\r\n    const handleClick = (e) => {\r\n        dispatch(sort(countries));\r\n    };\r\n\r\n    const handleClickZ = (e) => {\r\n        dispatch(sortZA(countries));\r\n    };\r\n\r\n    const handleClickPopulation = (e) => {\r\n        dispatch(population(countries));\r\n    };\r\n\r\n    const handleClickPopulationLower = (e) => {\r\n        dispatch(populationLower(countries));\r\n    };\r\n\r\n    const handleRegion = (e) => {\r\n        if (e.target.value === \"ALL\") {\r\n            dispatch(resetAll());\r\n        } else {\r\n            dispatch(getRegions(e.target.value));\r\n        }\r\n    };\r\n\r\n    const handleActivities = (e) => {\r\n        dispatch(filteredActivities(e.target.value));\r\n    };\r\n\r\n    return (\r\n        <NavBar>\r\n            <div className=\"Menu\">\r\n                Countries <span>App</span>\r\n            </div>\r\n            <Search />\r\n            <select className=\"sort\" placeholder=\"A-Z\">\r\n                <option onClick={(e) => handleClickOriginal(e)}>Order</option>\r\n                <option onClick={(e) => handleClick(e)}>A-Z</option>\r\n                <option onClick={(e) => handleClickZ(e)}>Z-A</option>\r\n                <option onClick={(e) => handleClickPopulation(e)}>\r\n                    Population ⬆\r\n                </option>\r\n                <option onClick={(e) => handleClickPopulationLower(e)}>\r\n                    Population ⬇\r\n                </option>\r\n            </select>\r\n            <select className=\"region\" onChange={(e) => handleRegion(e)}>\r\n                <option value=\"ALL\">World Regions</option>\r\n                <option value=\"Europe\">Europe</option>\r\n                <option value=\"Americas\">Americas</option>\r\n                <option value=\"Asia\">Asia</option>\r\n                <option value=\"Oceania\">Oceania</option>\r\n                <option value=\"Africa\">Africa</option>\r\n                <option value=\"Polar\">Antartida</option>\r\n            </select>\r\n            <button className=\"activity\" onClick={() => history.push(`/form`)}>\r\n                Create New Activity\r\n            </button>\r\n            <select\r\n                className=\"activities\"\r\n                onChange={(e) => handleActivities(e)}\r\n            >\r\n                <option onClick={(e) => handleClickOriginal(e)}>\r\n                    Find Activities\r\n                </option>\r\n                {activities &&\r\n                    activities.map((el, index) => {\r\n                        return (\r\n                            <option key={index} value={el.name}>\r\n                                {el.name}\r\n                            </option>\r\n                        );\r\n                    })}\r\n            </select>\r\n        </NavBar>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Card = ({ country, index }) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div\r\n            key={index}\r\n            className=\"card\"\r\n            onClick={() => history.push(`/countries/${country.id}`)}\r\n        >\r\n            <h2>{country.name}</h2>\r\n            <img\r\n                // className=\"flag\"\r\n                src={country.flag}\r\n                alt={country.name}\r\n            />\r\n            <p className=\"region\">{country.region}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDiv = styled.div`\r\n    width: 90%;\r\n    /* margin: 0 15px 0 150px; */\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    .cards {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        margin: auto;\r\n        grid-gap: 4em;\r\n    }\r\n    .pag-styles {\r\n        .pagination ul {\r\n            display: flex;\r\n            justify-content: space-around;\r\n            margin-right: 20px;\r\n            text-decoration: none;\r\n            list-style-type: none;\r\n            font-size: 20px;\r\n        }\r\n        li {\r\n            text-decoration: none;\r\n            /* border: 1px solid white; */\r\n            border-radius: 8px;\r\n            background-color: #1b2a41;\r\n            padding: 8px;\r\n            width: 30px;\r\n            text-align: center;\r\n        }\r\n        a {\r\n            text-decoration: none;\r\n            color: white;\r\n            margin: auto;\r\n            :hover {\r\n                color: white;\r\n            }\r\n        }\r\n    }\r\n\r\n    .card {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 450px;\r\n        height: 300px;\r\n        justify-content: center;\r\n        border-radius: 5px;\r\n        text-align: center;\r\n        /* margin-bottom: 30px; */\r\n        background: #1b2a41;\r\n        /* box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px; */\r\n\r\n        color: white;\r\n        img {\r\n            width: 250px;\r\n            height: 150px;\r\n            margin: auto;\r\n            text-align: center;\r\n        }\r\n    }\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Pagination = ({ cardsPerPage, paginate }) => {\r\n    const countries = useSelector((state) => state.countries);\r\n    const region = useSelector((state) => state.region);\r\n    let pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(countries.length / cardsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    useEffect(() => {\r\n        if (region.length) {\r\n            pageNumbers = [];\r\n            for (let i = 1; i <= Math.ceil(region.length / cardsPerPage); i++) {\r\n                pageNumbers.push(i);\r\n            }\r\n        }\r\n    }, [region]);\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <ul>\r\n                {pageNumbers.map((number) => (\r\n                    <li key={number}>\r\n                        <a onClick={() => paginate(number)} href=\"#\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllCountries } from \"../../redux/actions/actions\";\r\nimport Card from \"../Card/Card\";\r\nimport { StyledDiv } from \"./styled\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const countries = useSelector((state) => state.countries);\r\n    const regionc = useSelector((state) => state.region);\r\n    const typeR = useSelector((state) => state.type);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const cardsPerPage = 12;\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    // indice del ultimo elemento de cada pagina\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    // indice del primer elemento de cada pagina\r\n    const currentCountries = countries.slice(indexOfFirstCard, indexOfLastCard);\r\n    const currentRegions = regionc.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n    // Toma el numero que me devuelve la cuenta.\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountries());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (typeR !== \"all\") {\r\n            setCurrentPage(1);\r\n        }\r\n    }, [dispatch, typeR, countries]);\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <div className=\"pag-styles\">\r\n                <Pagination cardsPerPage={cardsPerPage} paginate={paginate} />\r\n            </div>\r\n            <div className=\"cards\">\r\n                {currentRegions && currentRegions.length !== 0\r\n                    ? currentRegions.map((country, index) => {\r\n                          return <Card country={country} key={index} />;\r\n                      })\r\n                    : currentCountries &&\r\n                      currentCountries.map((country, index) => {\r\n                          return <Card country={country} key={index} />;\r\n                      })}\r\n            </div>\r\n        </StyledDiv>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDiv = styled.div`\r\n    body {\r\n        background-color: #1d3557;\r\n    }\r\n    background-color: #3d5a80;\r\n    border: 2px solid;\r\n    border-radius: 5px;\r\n    width: 60%;\r\n    margin: auto;\r\n    margin-top: 20px;\r\n    padding-top: 100px;\r\n    color: white;\r\n\r\n    .activities {\r\n        color: white;\r\n    }\r\n\r\n    .flag {\r\n        display: flex;\r\n        text-align: center;\r\n        justify-content: center;\r\n        max-width: 250px;\r\n        margin: auto;\r\n        padding: auto;\r\n    }\r\n\r\n    h2 {\r\n        text-align: center;\r\n    }\r\n    p {\r\n        text-align: center;\r\n        font-weight: 300;\r\n    }\r\n    div {\r\n        text-align: center;\r\n    }\r\n\r\n    .btn {\r\n        padding: 10px;\r\n        margin-right: 10px;\r\n        margin-bottom: 20px;\r\n    }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { getCountriesById, resetAll } from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { StyledDiv } from \"../CountriesDetails/styled\";\r\n\r\nconst CountriesDetails = ({ index }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const idCountry = useParams();\r\n    const countriesId = useSelector((state) => state.countriesId);\r\n\r\n    const handleClick = () => {\r\n        history.push(`/home`);\r\n        dispatch(resetAll());\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountriesById(idCountry.idCountry));\r\n    }, [dispatch, idCountry]);\r\n\r\n    return (\r\n        <StyledDiv key={index} className=\"card\">\r\n            <img\r\n                className=\"flag\"\r\n                src={countriesId.flag}\r\n                alt={countriesId.name}\r\n            />\r\n\r\n            <h2>{countriesId.name}</h2>\r\n            <p>Capital: {countriesId.capital}</p>\r\n            <p>Alpha3Code: {countriesId.id}</p>\r\n            <p>Region: {countriesId.region}</p>\r\n            <p>Subregion: {countriesId.subregion}</p>\r\n            <p>Area: {countriesId.area} km</p>\r\n            <p>Population: {countriesId.population}</p>\r\n\r\n            <p className=\"activities\">\r\n                {countriesId.Activities &&\r\n                    countriesId.Activities.map((c) => (\r\n                        <div>\r\n                            <h4>Activities </h4>\r\n                            <p>Activity Name : {c.name} </p>\r\n                            <p>Difficulty : {c.difficulty}</p>\r\n                            <p>Duration: {c.duration} hours. </p>\r\n                            <p>Season : {c.season}</p>\r\n                        </div>\r\n                    ))}\r\n            </p>\r\n            <div>\r\n                <button className=\"btn\" onClick={() => handleClick()}>\r\n                    Back to Home 🏠\r\n                </button>\r\n            </div>\r\n        </StyledDiv>\r\n    );\r\n};\r\n\r\nexport default CountriesDetails;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDiv = styled.div`\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: white;\r\n    border: 1px solid white;\r\n    border-radius: 5px;\r\n    width: 50%;\r\n    margin: 15px auto;\r\n    height: 500px;\r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        width: 450px;\r\n        margin: auto;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    select {\r\n        width: 300px;\r\n    }\r\n    p {\r\n        color: red;\r\n        .danger {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n\r\n    label {\r\n        font-weight: 600;\r\n    }\r\n    .btn {\r\n        margin-top: 15px;\r\n        padding: 8px;\r\n        margin-right: 12px;\r\n    }\r\n    .container {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        width: 450px;\r\n        margin: auto;\r\n        margin-bottom: 15px;\r\n\r\n        label {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n        input {\r\n            width: 300px;\r\n        }\r\n    }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getAllCountries } from \"../../redux/actions/actions\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport { StyledDiv } from \"./styled\";\r\n\r\nconst Form = () => {\r\n    const history = useHistory();\r\n    const countries = useSelector((state) => state.countries);\r\n    const dispatch = useDispatch();\r\n\r\n    const [countriesChange, setCountriesChange] = useState({\r\n        countriesInput: [],\r\n    });\r\n\r\n    const [input, setInput] = useState({\r\n        // Estados locales del componentes\r\n        name: \"\",\r\n        duration: \"\",\r\n        season: \"\",\r\n        difficulty: \"\",\r\n        flag: \"\",\r\n        idCountry: [],\r\n    });\r\n\r\n    const validate = (input) => {\r\n        let errors = {};\r\n        if (!input.name) errors.name = \"Activity is required.\";\r\n        return errors;\r\n    };\r\n\r\n    const [errors, setErrors] = useState({ name: false });\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountries());\r\n    }, [dispatch]);\r\n\r\n    const handleClick = () => {\r\n        history.push(`/home`);\r\n    };\r\n\r\n    // const handleAlert = () => {\r\n    //     alert(\"Activity Created!\");\r\n    // };\r\n\r\n    const handleSumbit = async (e) => {\r\n        e.preventDefault();\r\n        if (errors.name) {\r\n            alert(\"Complete all the fields\");\r\n        } else {\r\n            try {\r\n                await axios.post(\r\n                    `https://countries-a.herokuapp.com/activities`,\r\n                    input\r\n                );\r\n                alert(\"Activity created.\");\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        let objError = validate({ ...input, [e.target.value]: e.target.value });\r\n        setErrors(objError);\r\n\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCountriesChange = (e) => {\r\n        setCountriesChange({\r\n            ...countriesChange,\r\n            countriesInput: e.target.value,\r\n        });\r\n        setInput({\r\n            ...input,\r\n            idCountry: [...input.idCountry, e.target.value],\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={(e) => handleSumbit(e)}>\r\n            <Nav />\r\n            <StyledDiv>\r\n                <div>\r\n                    <h1>Create your own activity</h1>\r\n                    <p>\r\n                        Please fill out all fields as required and click 'Create\r\n                        Activity'\r\n                    </p>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <label>Activity Name: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={input.name}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    {errors.name && <p className=\"danger\">{errors.name} </p>}\r\n                </div>\r\n                <div>\r\n                    <label>Duration: </label>\r\n                    <select\r\n                        type=\"number\"\r\n                        name=\"duration\"\r\n                        min=\"1\"\r\n                        max=\"24\"\r\n                        value={input.duration}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                        <option value=\"\" selected disabled>\r\n                            Select a duration...\r\n                        </option>\r\n                        <option value=\"1\">1hs</option>\r\n                        <option value=\"4\">4hs</option>\r\n                        <option value=\"8\">8hs</option>\r\n                        <option value=\"16\">16hs</option>\r\n                        <option value=\"24\">24hs</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Season: </label>\r\n                    <select\r\n                        type=\"number\"\r\n                        name=\"season\"\r\n                        value={input.season}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                        <option value=\"\" selected disabled>\r\n                            Select a season...\r\n                        </option>\r\n                        <option value=\"summer\">Summer</option>\r\n                        <option value=\"winter\">Winter</option>\r\n                        <option value=\"spring\">Spring</option>\r\n                        <option value=\"autumn\">Autumn</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Difficulty: </label>\r\n                    <select\r\n                        type=\"number\"\r\n                        name=\"difficulty\"\r\n                        min=\"1\"\r\n                        max=\"5\"\r\n                        value={input.difficulty}\r\n                        onChange={handleInputChange}\r\n                    >\r\n                        <option value=\"\" selected disabled>\r\n                            Select a difficulty...\r\n                        </option>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Select countries: </label>\r\n                    <select\r\n                        onChange={(e) => handleCountriesChange(e)}\r\n                        name=\"idCountry\"\r\n                    >\r\n                        <option value=\"\" selected disabled>\r\n                            Select a country...\r\n                        </option>\r\n                        {countries &&\r\n                            countries.map((el, index) => {\r\n                                return (\r\n                                    <option key={index} value={el.id}>\r\n                                        {el.name} {el.id}\r\n                                    </option>\r\n                                );\r\n                            })}\r\n                    </select>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    type=\"submit\"\r\n                    value=\"create-activity\"\r\n                    // onClick={() => handleAlert()}\r\n                >\r\n                    Create Activity\r\n                </button>\r\n                <button className=\"btn\" onClick={() => handleClick()}>\r\n                    Back to Home\r\n                </button>\r\n            </StyledDiv>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import { Route } from \"react-router-dom\";\r\nimport Landing from \"./components/LandingPage/Landing\";\r\nimport NavBar from \"./components/Nav/Nav\";\r\nimport Home from \"./components/Home/Home\";\r\nimport CountriesDetails from \"./components/CountriesDetails/CountriesDetails\";\r\nimport Form from \"./components/FormActivities/Form\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route path=\"/home\" component={NavBar} />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/countries/:idCountry\" component={CountriesDetails} />\r\n            <Route path=\"/form\" component={Form} />\r\n            {/* <Route path=\"/home\" component={Pagination} /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    countries: [],\r\n    countriesId: {},\r\n    region: [], // Te VAS A ROMPER PEDAZO DE SORETE\r\n    reset: [],\r\n    type: \"all\",\r\n    activities: [],\r\n    activitiesByCountry: [],\r\n};\r\n\r\nconst filterByActivity = (activity, countries) => {\r\n    let filtered = countries.filter((c) => {\r\n        if (c.Activities) {\r\n            for (let i = 0; i < c.Activities.length; i++) {\r\n                if (c.Activities[i].name === activity) {\r\n                    return true;\r\n                }\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n    return filtered;\r\n};\r\n\r\nconst countries = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_COUNTRIES\":\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                reset: action.payload,\r\n            };\r\n\r\n        case \"RESET\":\r\n            return {\r\n                ...state,\r\n                countries: state.reset,\r\n                countriesId: {}, // Me vacia los paises que tenga por ID\r\n                type: \"all\",\r\n            };\r\n\r\n        case \"GET_COUNTRIES_ID\":\r\n            return {\r\n                ...state,\r\n                countriesId: action.payload,\r\n            };\r\n\r\n        case \"GET_COUNTRIES_NAME\":\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n            };\r\n\r\n        case \"GET_REGIONS\":\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                // ACA TENIA REGIONS TE ROMPISTE DEVUELTA PERO TE VOLVES COGIDO\r\n                type: \"region\",\r\n            };\r\n\r\n        case \"SORT_ALPHABETICALLY\":\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                type: \"A-Z\",\r\n            };\r\n\r\n        case \"SORT_ALPHABETICALLY_ZA\":\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                type: \"Z-A\",\r\n            };\r\n\r\n        case \"POPULATION\":\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                type: \"UP\",\r\n            };\r\n\r\n        case \"POPULATION_LOWER\":\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                type: \"LOWER\",\r\n            };\r\n\r\n        case \"ACTIVITIES\":\r\n            return {\r\n                ...state,\r\n                activities: action.payload,\r\n            };\r\n\r\n        case \"POST_ACTIVITIES\":\r\n            return {\r\n                ...state,\r\n                activities: action.payload,\r\n            };\r\n\r\n        case \"ACTIVITIES_BY_COUNTRY\":\r\n            let newCountry = state.reset;\r\n            let filtered = filterByActivity(action.payload, newCountry);\r\n\r\n            return {\r\n                ...state,\r\n                countries: filtered,\r\n                type: \"filtered\",\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default countries;\r\n","import countries from \"../reducer/index\";\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n    countries,\r\n    compose(\r\n        applyMiddleware(thunk) // Cuando se dispara una accion async la agarra el thunk y evita errores.\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store/index'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}